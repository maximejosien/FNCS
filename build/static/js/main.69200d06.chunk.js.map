{"version":3,"sources":["Navbar/Navbar.tsx","User/login.tsx","User/logout.tsx","Purchase/purchaseBlock.tsx","Purchase/purchase.tsx","Station/station.tsx","UserPanel/UserPanel.tsx","Ticket/ticket.tsx","Profile/profile.tsx","FNCS/fncs.tsx","index.tsx"],"names":["Navbar","includes","window","location","pathname","className","style","display","this","props","connected","isHomeSection","to","isLoginSection","isProfileSection","Component","Login","state","email","password","event","setState","target","value","loginResponse","fetchLogin","responseJson","json","status","localStorage","token","setItem","setConnected","fetch","method","headers","body","JSON","stringify","login","preventDefault","handleGoHomeIfUserIsConnected","id","onSubmit","onSubmitForm","bind","type","placeholder","defaultValue","onChange","onChangeEmail","onChangePassword","Logout","clear","PurchaseBlock","priceTicket","stations","getItem","parse","getListStationsPurchased","newStation","arrivalStation","departureStation","getPriceReduction","push","saveStationBought","textDecoration","getDisplayPrice","onClickBuyingButton","Purchase","stationList","i","computeStation","map","item","key","Station","departureStationSave","arrivalStationSave","departureListStations","arrivalListStations","displayDepartureList","displayArrivalList","searchEnabled","SNCFRailwayReferentialResponse","fetchSNCF","fields","pltf_commune_libellemin","railwayStations","records","Set","station","textContent","prevProps","prevState","snapshot","displayDepartureListStations","displayArrivalListStations","onChangeDepartureStation","onChangeArrivalStation","d","idx","onClick","handleCheckDeparture","handleCheckArrival","UserPanel","promoCode","getPromoCode","onChangeInput","disabled","src","md5","alt","firstName","lastName","onClickButtonPromoCode","getCorrectInputPromoCode","React","Ticket","tickets","getMyTickets","ticket","displayTicket","Profile","getEmail","FNCS","path","render","goHomeIfUserIsConnected","component","App","ReactDOM","document","getElementById"],"mappings":"qVAUqBA,G,8LAEb,MAAQ,CAAC,IAAK,aAAaC,SAASC,OAAOC,SAASC,Y,uCAGpD,MAAQ,CAAC,SAASH,SAASC,OAAOC,SAASC,Y,yCAG3C,MAAQ,CAAC,YAAYH,SAASC,OAAOC,SAASC,Y,+BAG9C,OACI,yBAAKC,UAAU,UACX,yBAAKC,MAAO,CAACC,QAASC,KAAKC,MAAMC,UAAY,OAAS,UAClD,kBAAC,IAAD,CAAML,UAAWG,KAAKG,gBAAkB,SAAW,OAAQC,GAAG,KAA9D,WACA,kBAAC,IAAD,CAAMP,UAAWG,KAAKK,iBAAmB,SAAW,OAAQD,GAAG,UAA/D,cAEJ,yBAAKN,MAAO,CAACC,QAASC,KAAKC,MAAMC,UAAY,QAAU,SACnD,kBAAC,IAAD,CAAML,UAAWG,KAAKG,gBAAkB,SAAW,OAAQC,GAAG,aAA9D,WACA,kBAAC,IAAD,CAAMP,UAAWG,KAAKM,mBAAqB,SAAW,OAAQF,GAAG,YAAjE,cACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,wB,GApBgBG,c,yBCGfC,G,kBACjB,WAAYP,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTC,MAAO,qBACPC,SAAU,cAJC,E,2EAOLC,GACVZ,KAAKa,SAAS,CACVH,MAAOE,EAAME,OAAOC,U,uCAGXH,GACbZ,KAAKa,SAAS,CACVF,SAAUC,EAAME,OAAOC,U,qEAGnBH,G,gFACFI,EAAgBhB,KAAKiB,a,SACCD,E,cAAtBE,E,OAAqCC,O,SAEhCH,E,sBAAeI,OAAW,M,kEAIrCC,a,UAA0CH,E,oBAAcI,M,KAA3CC,Q,UAAQ,a,MACrBF,aAAaE,QAAQ,QAASvB,KAAKS,MAAMC,OAEzCV,KAAKC,MAAMuB,cAAa,G,2IAIxB,OAAOC,MAAM,8BAA+B,CACxCC,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBpB,MAAOV,KAAKS,MAAMC,MAClBC,SAAUX,KAAKS,MAAME,e,mCAIpBC,GACTZ,KAAK+B,MAAMnB,GACXA,EAAMoB,mB,+BAGN,OACI,yBAAKnC,UAAU,aACVG,KAAKC,MAAMgC,8BACZ,yBAAKpC,UAAU,OACb,0BAAMqC,GAAG,YAAYC,SAAUnC,KAAKoC,aAAaC,KAAKrC,OACpD,2BAAOsC,KAAK,OAAOzC,UAAU,eAAe0C,YAAY,QAAQC,aAAcxC,KAAKS,MAAMC,MAAO+B,SAAUzC,KAAK0C,cAAcL,KAAKrC,QAClI,6BACA,2BAAOsC,KAAK,WAAWzC,UAAU,eAAe0C,YAAY,eAAeC,aAAcxC,KAAKS,MAAME,SAAU8B,SAAUzC,KAAK2C,iBAAiBN,KAAKrC,QACnJ,6BACA,4BAAQsC,KAAK,SAASzC,UAAU,gBAAhC,gB,GA3DeU,c,QCHdqC,E,4LAEbvB,aAAawB,QACb7C,KAAKC,MAAMuB,cAAa,K,+BAGxB,OAAO,kBAAC,IAAD,CAAUpB,GAAG,U,GANQG,a,QCEfuC,G,wBACjB,WAAY7C,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTsC,YAAa,IAHF,E,wFAOf,IAAMC,EAAW3B,aAAa4B,QAAQ,YAEtC,OAAOD,EAAWnB,KAAKqB,MAAMF,GAAY,K,0CAGzC,IAAMA,EAAWhD,KAAKmD,2BAElBC,EAAa,CAACpD,KAAKC,MAAMoD,eAAgBrD,KAAKC,MAAMqD,iBAAkBtD,KAAKuD,qBAE/EP,EAASQ,KAAKJ,GAEd/B,aAAaE,QAAQ,WAAYM,KAAKC,UAAUkB,M,0CAEhCpC,GAChBZ,KAAKyD,sB,0CAKL,OAFkBpC,aAAa4B,QAAQ,aAEpBjD,KAAKS,MAAMsC,YAAc,EAAI/C,KAAKS,MAAMsC,c,wCAG3D,OACI,6BACI,uBAAGjD,MAAO,CAAE4D,eAAgB1D,KAAKuD,sBAAwBvD,KAAKS,MAAMsC,YAAc,eAAiB,KAAM/C,KAAKS,MAAMsC,YAApH,UACA,uBAAGjD,MAAO,CAAEC,QAASC,KAAKuD,sBAAwBvD,KAAKS,MAAMsC,YAAc,QAAU,SAArF,gCAAuH/C,KAAKuD,oBAA5H,a,+BAKR,OACI,yBAAK1D,UAAU,gBACX,yBAAKA,UAAU,YACX,2BAAIG,KAAKC,MAAMqD,kBACf,6BACA,2BAAItD,KAAKC,MAAMoD,iBAEnB,yBAAKxD,UAAU,YACVG,KAAK2D,mBAEV,0BAAMxB,SAAUnC,KAAK4D,oBAAoBvB,KAAKrC,MAAOH,UAAU,YAC3D,2BAAOyC,KAAK,SAASvB,MAAM,UACpBlB,UAAU,uB,GAlDMU,cCCtBsD,G,kBACjB,WAAY5D,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTqD,YAAa,IAHF,E,8EASf,IAFA,IAAMA,EAAwB,GAErBC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAYN,KAAK,QAGrBxD,KAAKa,SAAS,CACViD,YAAaA,M,0CAIjB9D,KAAKgE,mB,+BAEC,IAAD,OACL,OACI,yBAAK9B,GAAG,gBAAgBrC,UAAU,aAC7BG,KAAKS,MAAMqD,YAAYG,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAAC,EAAD,CAAeA,IAAKA,EAAKb,iBAAkB,EAAKrD,MAAMqD,iBAAkBD,eAAgB,EAAKpD,MAAMoD,yB,GAzBjF9C,cCMjB6D,E,YACjB,WAAYnE,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACT6C,iBAAkB,GAClBD,eAAgB,GAChBgB,qBAAsB,GACtBC,mBAAoB,GACpBC,sBAAuB,GACvBC,oBAAqB,GACrBC,sBAAsB,EACtBC,oBAAoB,EACpBC,eAAe,GAXJ,E,mNAeqB,KAAhC3E,KAAKS,MAAM6C,iB,uBACXtD,KAAKa,SAAS,CACV0D,sBAAuB,K,iCAIzBK,EAAiC5E,KAAK6E,UAAU7E,KAAKS,MAAM6C,kB,SACrCsB,E,cAAtB1D,E,OAAsDC,O,SAE7BD,E,mBAA0B,SAAAH,GACrD,OAAOA,EAAM+D,OAAOC,yBADlBC,E,OAAuCC,QAAQhB,I,WAIrDjE,K,cACmCkF,I,UAAUF,E,kEAAzCT,sB,WADC1D,S,iSAK6B,KAA9Bb,KAAKS,MAAM4C,e,uBACXrD,KAAKa,SAAS,CACV2D,oBAAqB,K,iCAIvBI,EAAiC5E,KAAK6E,UAAU7E,KAAKS,MAAM4C,gB,SACrCuB,E,cAAtB1D,E,OAAsDC,O,SAE7BD,E,mBAA0B,SAAAH,GACrD,OAAOA,EAAM+D,OAAOC,yBADlBC,E,OAAuCC,QAAQhB,I,WAIrDjE,K,cACiCkF,I,UAAUF,E,kEAAvCR,oB,WADC3D,S,uJAICsE,GACN,OAAO1D,MAAM,kGAAoG0D,K,+CAE5FvE,GACrBZ,KAAKa,SAAS,CACVyC,iBAAkB1C,EAAME,OAAOC,MAC/B0D,sBAAsB,M,6CAGP7D,GACnBZ,KAAKa,SAAS,CACVwC,eAAgBzC,EAAME,OAAOC,MAC7B2D,oBAAoB,M,2CAGP9D,GACjBZ,KAAKa,SAAS,CACVyC,iBAAkB1C,EAAME,OAAOsE,YAC/BX,sBAAsB,M,yCAGX7D,GACfZ,KAAKa,SAAS,CACVwC,eAAgBzC,EAAME,OAAOsE,YAC7BV,oBAAoB,M,mCAGf9D,GACTZ,KAAKa,SAAS,CACVwD,qBAAsBrE,KAAKS,MAAM6C,iBACjCgB,mBAAoBtE,KAAKS,MAAM4C,eAC/BsB,eAAe,IAEnB/D,EAAMoB,mB,yCAESqD,EAAWC,EAAWC,GACjCvF,KAAKS,MAAM6C,mBAAqBgC,EAAUhC,mBAC1CtD,KAAKwF,+BACLxF,KAAKa,SAAS,CACV6D,oBAAoB,KAGxB1E,KAAKS,MAAM4C,iBAAmBiC,EAAUjC,iBACxCrD,KAAKyF,6BACLzF,KAAKa,SAAS,CACV4D,sBAAsB,O,+BAIxB,IAAD,OACL,OACI,yBAAKvC,GAAG,cAAcrC,UAAU,aAC5B,yBAAKA,UAAU,OACX,0BAAMA,UAAU,WAAWsC,SAAUnC,KAAKoC,aAAaC,KAAKrC,OACxD,sDACA,2BAAOsC,KAAK,OAAOzC,UAAU,eAAe0C,YAAY,oCAAiCxB,MAAOf,KAAKS,MAAM6C,iBAAkBb,SAAUzC,KAAK0F,yBAAyBrD,KAAKrC,QAC1K,6BACA,2BAAOsC,KAAK,OAAOzC,UAAU,eAAe0C,YAAY,uCAAqCxB,MAAOf,KAAKS,MAAM4C,eAAgBZ,SAAUzC,KAAK2F,uBAAuBtD,KAAKrC,QAC1K,6BACA,2BAAOsC,KAAK,OAAOzC,UAAU,iBAC7B,6BACA,2BAAOyC,KAAK,SAASzC,UAAU,kBAEnC,yBAAKA,UAAU,YACX,wBAAIA,UAAU,aAAaC,MAAO,CAAEC,QAASC,KAAKS,MAAMgE,qBAAuB,QAAU,SACpFzE,KAAKS,MAAM8D,sBAAsBN,KAAI,SAAC2B,EAAGC,GACtC,OAAQ,wBAAIC,QAAS,EAAKC,qBAAqB1D,KAAK,GAAOxC,UAAU,kBAAkBsE,IAAK0B,GAAMD,OAG1G,wBAAI/F,UAAU,aAAaC,MAAO,CAAEC,QAASC,KAAKS,MAAMiE,mBAAqB,QAAU,SAClF1E,KAAKS,MAAM+D,oBAAoBP,KAAI,SAAC2B,EAAGC,GACpC,OAAQ,wBAAIC,QAAS,EAAKE,mBAAmB3D,KAAK,GAAOxC,UAAU,kBAAkBsE,IAAK0B,GAAMD,SAKhH,yBAAK/F,UAAU,MAAMC,MAAO,CAAEC,QAASC,KAAKS,MAAMkE,cAAgB,QAAU,SACxE,kBAAC,EAAD,CAAUrB,iBAAkBtD,KAAKS,MAAM6C,iBAAkBD,eAAgBrD,KAAKS,MAAM4C,uB,GAhInE9C,a,yBCJhB0F,E,YAMjB,WAAYhG,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTyF,UAAW,EAAKC,gBAHL,E,4EAOf,IAAMD,EAAY7E,aAAa4B,QAAQ,aACvC,OAAOiD,GAAwB,K,oCAErBtF,GACVZ,KAAKa,SAAS,CACVqF,UAAWtF,EAAME,OAAOC,U,6CAGTH,GACnBS,aAAaE,QAAQ,YAAavB,KAAKS,MAAMyF,a,iDAG7C,OAAyC,OAArC7E,aAAa4B,QAAQ,YAEjB,6BACI,mDACA,2BAAOX,KAAK,OAAOzC,UAAU,eAAe2C,aAAcxC,KAAKS,MAAMyF,UAC9DzD,SAAUzC,KAAKoG,cAAc/D,KAAKrC,QACzC,6BACA,2BAAOsC,KAAK,SAASzC,UAAU,eAAekB,MAAM,eAK5D,6BACI,mDACA,2BAAOsF,UAAQ,EAAC/D,KAAK,OAAOzC,UAAU,eAAe2C,aAAcxC,KAAKS,MAAMyF,UACvEzD,SAAUzC,KAAKoG,cAAc/D,KAAKrC,QACzC,6BACA,2BAAOqG,UAAQ,EAAC/D,KAAK,SAASzC,UAAU,eAAekB,MAAM,iB,+BAKrE,OACI,yBAAKlB,UAAU,QACX,yBAAKyG,IAAK,mCAAqCC,IAAIvG,KAAKC,MAAMS,OAAS,SAClEb,UAAU,eAAe2G,IAAI,UAClC,yBAAK3G,UAAU,aACX,wBAAIA,UAAU,cAAcG,KAAKC,MAAMwG,UAAY,IAAMzG,KAAKC,MAAMyG,UACpE,uBAAG7G,UAAU,cAAcG,KAAKC,MAAMS,OACtC,6BACA,0BAAMyB,SAAUnC,KAAK2G,uBAAuBtE,KAAKrC,OAC5CA,KAAK4G,kC,GAxDSC,IAAMtG,WCNxBuG,E,YACjB,WAAY7G,GAAQ,IAAD,8BACf,4CAAMA,KACDQ,MAAQ,CACTsG,QAAS,EAAKC,gBAHH,E,4EAQf,IAAMD,EAAU1F,aAAa4B,QAAQ,YAErC,OAAO8D,EAAUlF,KAAKqB,MAAM6D,GAAW,K,oCAG7BE,EAAQpB,GAClB,OACI,yBAAK1B,IAAK0B,GACN,2BAAIoB,EAAO,GAAX,OAAmBA,EAAO,GAA1B,KAAgCA,EAAO,GAAvC,a,+BAKF,IAAD,OACL,OACI,yBAAKpH,UAAU,aACX,2CACCG,KAAKS,MAAMsG,QAAQ9C,KAAI,SAACgD,EAAQpB,GAC7B,OAAQ,EAAKqB,cAAcD,EAAQpB,W,GA3BnBtF,aCEf4G,E,mLAEb,IAAMzG,EAAQW,aAAa4B,QAAQ,SACnC,OAAOvC,GAAgB,K,+BAGvB,OACI,yBAAKb,UAAU,aACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAW4G,UAAU,SAASC,SAAS,SAAShG,MAAOV,KAAKoH,cAEhE,yBAAKvH,UAAU,2BACX,kBAAC,EAAD,a,GAbaU,aCMhB8G,E,YACjB,WAAYpH,GAAQ,IAAD,8BACf,4CAAMA,KAKVuB,aAAe,SAACtB,GACZ,EAAKW,SAAS,CACVX,UAAWA,KANf,EAAKO,MAAQ,CACTP,YAAamB,aAAa4B,QAAQ,eAHvB,E,uFAYf,OAAIjD,KAAKS,MAAMP,UACJ,kBAAC,IAAD,CAAUE,GAAG,cAElB,gC,+BAEA,IAAD,OACL,OACI,yBAAKP,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAQK,UAAWF,KAAKS,MAAMP,YAC9B,kBAAC,IAAD,CAAOoH,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,CAAO/F,aAAc,EAAKA,aAAcS,8BAA+B,EAAKuF,+BAC/G,kBAAC,IAAD,CAAOF,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAD,CAAQ/F,aAAc,EAAKA,kBAC/D,kBAAC,IAAD,CAAO8F,KAAK,YAAYG,UAAWrD,IACnC,kBAAC,IAAD,CAAOkD,KAAK,WAAWG,UAAWN,U,GA1BpB5G,aCbnB,SAASmH,IACpB,OACI,yBAAK7H,UAAU,OACX,kBAAC,EAAD,OAPZ,wCAYA8H,IAASJ,OAAO,kBAACG,EAAD,MAAQE,SAASC,eAAe,W","file":"static/js/main.69200d06.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\ninterface NavbarProps {\n    connected: boolean\n}\n\ninterface NavbarState {\n}\n\nexport default class Navbar extends Component<NavbarProps, NavbarState> {\n    isHomeSection() {\n        return (['/', '/purchase'].includes(window.location.pathname));\n    }\n    isLoginSection() {\n        return (['login'].includes(window.location.pathname));\n    }\n    isProfileSection() {\n        return (['/profile'].includes(window.location.pathname));\n    }\n    render() {\n        return (\n            <div className=\"topnav\">\n                <div style={{display: this.props.connected ? 'none' : 'block'}}>\n                    <Link className={this.isHomeSection() ? 'active' : 'none'} to='/'>Accueil</Link>\n                    <Link className={this.isLoginSection() ? 'active' : 'none'} to='/login'>Connexion</Link>\n                </div>\n                <div style={{display: this.props.connected ? 'block' : 'none'}}>\n                    <Link className={this.isHomeSection() ? 'active' : 'none'} to='/purchase'>Accueil</Link>\n                    <Link className={this.isProfileSection() ? 'active' : 'none'} to='/profile'>Mon compte</Link>\n                    <Link to='/logout'>Déconnexion</Link>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './login.css';\n\ninterface LoginProps {\n    setConnected: any,\n    handleGoHomeIfUserIsConnected: any\n}\n\ninterface LoginState {\n    email: string,\n    password: string\n}\n\nexport default class Login extends Component<LoginProps, LoginState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: 'eve.holt@reqres.in',\n            password: 'cityslicka'\n        }\n    }\n    onChangeEmail(event) {\n        this.setState({\n            email: event.target.value\n        });\n    }\n    onChangePassword(event) {\n        this.setState({\n            password: event.target.value\n        });\n    }\n    async login(event) {\n        const loginResponse = this.fetchLogin();\n        const responseJson = (await loginResponse).json();\n\n        if ((await loginResponse).status !== 200) {\n            return;\n        }\n\n        localStorage.setItem('auth_token', (await responseJson).token);\n        localStorage.setItem('email', this.state.email);\n\n        this.props.setConnected(true);\n\n    }\n    fetchLogin() {\n        return fetch('https://reqres.in/api/login', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n        });\n    }\n    onSubmitForm(event) {\n        this.login(event);\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                {this.props.handleGoHomeIfUserIsConnected}\n                <div className=\"row\">\n                  <form id=\"formLogin\" onSubmit={this.onSubmitForm.bind(this)}>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Email\" defaultValue={this.state.email} onChange={this.onChangeEmail.bind(this)}/>\n                    <br/>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Mot de passe\" defaultValue={this.state.password} onChange={this.onChangePassword.bind(this)}/>\n                    <br/>\n                    <button type=\"submit\" className=\"form-control\">login</button>\n                  </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\n\ninterface LogoutProps {\n    setConnected: any\n}\n\ninterface LogoutState {\n}\n\nexport default class Logout extends Component<LogoutProps, LogoutState> {\n    componentDidMount() {\n        localStorage.clear();\n        this.props.setConnected(false);\n    }\n    render() {\n        return <Redirect to=\"/\"/>\n    }\n}\n","import React, {Component} from 'react';\nimport './purchaseBlock.css';\n\ninterface PurchaseBlockProps {\n    departureStation: string,\n    arrivalStation: string,\n}\n\ninterface PurchaseBlockStates {\n    priceTicket: number\n}\n\nexport default class PurchaseBlock extends Component<PurchaseBlockProps, PurchaseBlockStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            priceTicket: 20,\n        };\n    }\n    getListStationsPurchased() {\n        const stations = localStorage.getItem('stations');\n\n        return stations ? JSON.parse(stations) : [];\n    }\n    saveStationBought() {\n        const stations = this.getListStationsPurchased();\n\n        let newStation = [this.props.arrivalStation, this.props.departureStation, this.getPriceReduction()];\n\n        stations.push(newStation);\n\n        localStorage.setItem('stations', JSON.stringify(stations));\n    }\n    onClickBuyingButton(event) {\n        this.saveStationBought();\n    }\n    getPriceReduction() {\n        const promoCode = localStorage.getItem('promoCode');\n\n        return promoCode ? this.state.priceTicket / 2 : this.state.priceTicket;\n    }\n    getDisplayPrice() {\n        return (\n            <div>\n                <p style={{ textDecoration: this.getPriceReduction() !== this.state.priceTicket ? 'line-through' : ''}}>{this.state.priceTicket}€</p>\n                <p style={{ display: this.getPriceReduction() !== this.state.priceTicket ? 'block' : 'none' }}>Prix après réduction : {this.getPriceReduction()}€</p>\n            </div>\n        );\n    }\n    render() {\n        return (\n            <div className=\"row schedule\">\n                <div className=\"col-lg-3\">\n                    <p>{this.props.departureStation}</p>\n                    <hr/>\n                    <p>{this.props.arrivalStation}</p>\n                </div>\n                <div className=\"col-lg-3\">\n                    {this.getDisplayPrice()}\n                </div>\n                <form onSubmit={this.onClickBuyingButton.bind(this)} className=\"col-lg-6\">\n                    <input type=\"submit\" value=\"Acheter\"\n                           className=\"form-control\"/>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PurchaseBlock from \"./purchaseBlock\";\nimport './purchase.css';\n\ninterface PurchaseProps {\n    departureStation: string,\n    arrivalStation: string\n}\n\ninterface PurchaseStates {\n    stationList: any\n}\n\nexport default class Purchase extends Component<PurchaseProps, PurchaseStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stationList: []\n        }\n    }\n    computeStation() {\n        const stationList: string[] = [];\n\n        for (let i = 0; i < 10; i++) {\n            stationList.push('9h00');\n        }\n\n        this.setState({\n            stationList: stationList\n        });\n    }\n    componentDidMount() {\n        this.computeStation();\n    }\n    render() {\n        return (\n            <div id=\"purchaseBlock\" className=\"col-lg-12\">\n                {this.state.stationList.map((item, key) =>\n                    <PurchaseBlock key={key} departureStation={this.props.departureStation} arrivalStation={this.props.arrivalStation}/>\n                )}\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './station.css';\nimport Purchase from \"../Purchase/purchase\";\n\ninterface StationProps {\n}\n\ninterface StationStates {\n    departureStation: string,\n    arrivalStation: string,\n    departureStationSave: string,\n    arrivalStationSave: string,\n    departureListStations: any,\n    arrivalListStations: any,\n    displayDepartureList: boolean,\n    displayArrivalList: boolean,\n    searchEnabled: boolean\n}\n\nexport default class Station extends Component<StationProps, StationStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureStation: '',\n            arrivalStation: '',\n            departureStationSave: '',\n            arrivalStationSave: '',\n            departureListStations: [],\n            arrivalListStations: [],\n            displayDepartureList: false,\n            displayArrivalList: false,\n            searchEnabled: false\n        }\n    }\n    async displayDepartureListStations() {\n        if (this.state.departureStation === '') {\n            this.setState({\n                departureListStations: []\n            });\n            return;\n        }\n        const SNCFRailwayReferentialResponse = this.fetchSNCF(this.state.departureStation);\n        const responseJson = (await SNCFRailwayReferentialResponse).json();\n\n        const railwayStations = (await responseJson).records.map(value => {\n            return value.fields.pltf_commune_libellemin;\n        });\n\n        this.setState({\n            departureListStations: [...new Set(await railwayStations)]\n        });\n    }\n    async displayArrivalListStations() {\n        if (this.state.arrivalStation === '') {\n            this.setState({\n                arrivalListStations: []\n            });\n            return;\n        }\n        const SNCFRailwayReferentialResponse = this.fetchSNCF(this.state.arrivalStation);\n        const responseJson = (await SNCFRailwayReferentialResponse).json();\n\n        const railwayStations = (await responseJson).records.map(value => {\n            return value.fields.pltf_commune_libellemin;\n        });\n\n        this.setState({\n            arrivalListStations: [...new Set(await railwayStations)]\n        });\n    }\n    fetchSNCF(station) {\n        return fetch('https://ressources.data.sncf.com/api/records/1.0/search/?dataset=referentiel-gares-voyageurs&q=' + station);\n    }\n    onChangeDepartureStation(event) {\n        this.setState({\n            departureStation: event.target.value,\n            displayDepartureList: true\n        });\n    }\n    onChangeArrivalStation(event) {\n        this.setState({\n            arrivalStation: event.target.value,\n            displayArrivalList: true,\n        });\n    }\n    handleCheckDeparture(event) {\n        this.setState({\n            departureStation: event.target.textContent,\n            displayDepartureList: false,\n        });\n    }\n    handleCheckArrival(event) {\n        this.setState({\n            arrivalStation: event.target.textContent,\n            displayArrivalList: false,\n        });\n    }\n    onSubmitForm(event) {\n        this.setState({\n            departureStationSave: this.state.departureStation,\n            arrivalStationSave: this.state.arrivalStation,\n            searchEnabled: true\n        });\n        event.preventDefault();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.departureStation !== prevState.departureStation) {\n            this.displayDepartureListStations();\n            this.setState({\n                displayArrivalList: false,\n            });\n        }\n        if (this.state.arrivalStation !== prevState.arrivalStation) {\n            this.displayArrivalListStations();\n            this.setState({\n                displayDepartureList: false,\n            });\n        }\n    }\n    render() {\n        return (\n            <div id=\"formStation\" className=\"container\">\n                <div className=\"row\">\n                    <form className=\"col-lg-6\" onSubmit={this.onSubmitForm.bind(this)}>\n                        <p>Quel est votre trajet ?</p>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Saisir votre gare de départ...\" value={this.state.departureStation} onChange={this.onChangeDepartureStation.bind(this)}/>\n                        <br/>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Saisir votre gare de d'arrivée...\"  value={this.state.arrivalStation} onChange={this.onChangeArrivalStation.bind(this)}/>\n                        <br/>\n                        <input type=\"date\" className=\"form-control\"/>\n                        <br/>\n                        <input type=\"submit\" className=\"form-control\"/>\n                    </form>\n                    <div className=\"col-lg-6\">\n                        <ul className=\"list-group\" style={{ display: this.state.displayDepartureList ? 'block' : 'none' }}>\n                            {this.state.departureListStations.map((d, idx) => {\n                                return (<li onClick={this.handleCheckDeparture.bind(this)} className=\"list-group-item\" key={idx}>{d}</li>)\n                            })}\n                        </ul>\n                        <ul className=\"list-group\" style={{ display: this.state.displayArrivalList ? 'block' : 'none' }}>\n                            {this.state.arrivalListStations.map((d, idx) => {\n                                return (<li onClick={this.handleCheckArrival.bind(this)} className=\"list-group-item\" key={idx}>{d}</li>)\n                            })}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ display: this.state.searchEnabled ? 'block' : 'none' }}>\n                    <Purchase departureStation={this.state.departureStation} arrivalStation={this.state.arrivalStation}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'md5';\nimport emailPropType from 'email-prop-type';\n\ninterface UserPanelProps {\n    firstName: string,\n    lastName: string,\n    email: string\n}\n\ninterface UserPanelStates {\n    promoCode: string\n}\n\nexport default class UserPanel extends React.Component<UserPanelProps, UserPanelStates> {\n    static propTypes = {\n        email: emailPropType.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            promoCode: this.getPromoCode(),\n        };\n    }\n    getPromoCode() {\n        const promoCode = localStorage.getItem('promoCode');\n        return promoCode ? promoCode : '';\n    }\n    onChangeInput(event) {\n        this.setState({\n            promoCode: event.target.value\n        });\n    }\n    onClickButtonPromoCode(event) {\n        localStorage.setItem('promoCode', this.state.promoCode);\n    }\n    getCorrectInputPromoCode() {\n        if (localStorage.getItem('stations') === null) {\n            return (\n                <div>\n                    <p>Code de réduction</p>\n                    <input type=\"text\" className=\"form-control\" defaultValue={this.state.promoCode}\n                           onChange={this.onChangeInput.bind(this)}/>\n                    <br/>\n                    <input type=\"submit\" className=\"form-control\" value=\"Appliquer\"/>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <p>Code de réduction</p>\n                <input disabled type=\"text\" className=\"form-control\" defaultValue={this.state.promoCode}\n                       onChange={this.onChangeInput.bind(this)}/>\n                <br/>\n                <input disabled type=\"submit\" className=\"form-control\" value=\"Appliquer\"/>\n            </div>\n        );\n    }\n    render() {\n        return (\n            <div className=\"card\">\n                <img src={'https://www.gravatar.com/avatar/' + md5(this.props.email) + '?s=286'}\n                     className=\"card-img-top\" alt=\"hello\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{this.props.firstName + ' ' + this.props.lastName}</h5>\n                    <p className=\"card-title\">{this.props.email}</p>\n                    <hr/>\n                    <form onSubmit={this.onClickButtonPromoCode.bind(this)}>\n                        {this.getCorrectInputPromoCode()}\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\n\ninterface TicketProps {\n}\n\ninterface TicketStates {\n    tickets: any\n}\n\nexport default class Ticket extends Component<TicketProps, TicketStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tickets: this.getMyTickets()\n        };\n    }\n\n    getMyTickets() {\n        const tickets = localStorage.getItem('stations');\n\n        return tickets ? JSON.parse(tickets) : [];\n    }\n\n    displayTicket(ticket, idx) {\n        return (\n            <div key={idx}>\n                <p>{ticket[0]} -> {ticket[1]}: {ticket[2]}€</p>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Mes tickets</h2>\n                {this.state.tickets.map((ticket, idx) => {\n                    return (this.displayTicket(ticket, idx))\n                })}\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './profile.css';\nimport UserPanel from \"../UserPanel/UserPanel\";\nimport Ticket from \"../Ticket/ticket\";\n\ninterface ProfileProps {\n}\n\ninterface ProfileStates {\n}\n\nexport default class Profile extends Component<ProfileProps, ProfileStates> {\n    getEmail() {\n        const email = localStorage.getItem('email');\n        return email ? email : \"\";\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row profile-block\">\n                    <div className=\"col-lg-4\">\n                        <UserPanel firstName=\"Maxime\" lastName=\"JOSIEN\" email={this.getEmail()}/>\n                    </div>\n                    <div className=\"col-lg-6 border-tickets\">\n                        <Ticket/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport Navbar from \"../Navbar/Navbar\";\nimport Login from \"../User/login\";\nimport Logout from \"../User/logout\";\nimport Station from \"../Station/station\";\nimport Profile from \"../Profile/profile\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\ninterface FNCSProps {\n}\n\ninterface FNCSStates {\n    connected: boolean;\n}\n\nexport default class FNCS extends Component<FNCSProps & RouteComponentProps, FNCSStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: !!localStorage.getItem('auth_token')\n        };\n    }\n    setConnected = (connected) => {\n        this.setState({\n            connected: connected\n        });\n    }\n    goHomeIfUserIsConnected() {\n        if (this.state.connected) {\n            return <Redirect to=\"/purchase\"/>\n        }\n       return <div/>\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Navbar connected={this.state.connected}/>\n                    <Route path=\"/login\" render={() => <Login setConnected={this.setConnected} handleGoHomeIfUserIsConnected={this.goHomeIfUserIsConnected()}/>}/>\n                    <Route path=\"/logout\" render={() => <Logout setConnected={this.setConnected}/>}/>\n                    <Route path=\"/purchase\" component={Station}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                </Router>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FNCS from \"./FNCS/fncs\";\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <FNCS/>\n        </div>\n    );\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}