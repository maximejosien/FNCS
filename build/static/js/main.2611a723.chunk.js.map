{"version":3,"sources":["Navbar/Navbar.tsx","User/login.tsx","User/logout.tsx","Purchase/purchaseBlock.tsx","Purchase/purchase.tsx","Station/station.tsx","UserPanel/UserPanel.tsx","Ticket/ticket.tsx","Profile/profile.tsx","FNCS/fncs.tsx","index.tsx"],"names":["Navbar","className","style","display","this","props","connected","to","Component","Login","state","email","password","event","setState","target","value","loginResponse","fetchLogin","responseJson","json","status","localStorage","token","setItem","setConnected","fetch","method","headers","body","JSON","stringify","login","preventDefault","handleGoHomeIfUserIsConnected","id","onSubmit","onSubmitForm","bind","type","placeholder","defaultValue","onChange","onChangeEmail","onChangePassword","Logout","clear","PurchaseBlock","priceTicket","isBought","stations","getItem","parse","getListStationsPurchased","newStation","arrivalStation","departureStation","getPriceReduction","push","saveStationBought","textDecoration","ticketIsBought","getDisplayPrice","onClickBuyingButton","Purchase","stationList","i","computeStation","map","item","key","Station","departureStationSave","arrivalStationSave","departureListStations","arrivalListStations","displayDepartureList","displayArrivalList","searchEnabled","SNCFRailwayReferentialResponse","fetchSNCF","fields","pltf_commune_libellemin","railwayStations","records","Set","station","textContent","prevProps","prevState","snapshot","displayDepartureListStations","displayArrivalListStations","onChangeDepartureStation","onChangeArrivalStation","d","idx","onClick","handleCheckDeparture","handleCheckArrival","UserPanel","promoCode","getPromoCode","isCompleted","onChangeInput","disabled","codePromoIsCompleted","src","md5","alt","firstName","lastName","onClickButtonPromoCode","getCorrectInputPromoCode","React","Ticket","tickets","getMyTickets","ticket","displayTicket","Profile","getEmail","FNCS","path","render","goHomeIfUserIsConnected","component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2611a723.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\n\ninterface NavbarProps {\n    connected: boolean\n}\n\ninterface NavbarState {\n}\n\nexport default class Navbar extends Component<NavbarProps, NavbarState> {\n    render() {\n        return (\n            <div className=\"topnav\">\n                <div style={{display: this.props.connected ? 'none' : 'block'}}>\n                    <Link to='/'>Accueil</Link>\n                    <Link to='/login'>Connexion</Link>\n                </div>\n                <div style={{display: this.props.connected ? 'block' : 'none'}}>\n                    <Link to='/purchase'>Accueil</Link>\n                    <Link to='/profile'>Mon compte</Link>\n                    <Link to='/logout'>Déconnexion</Link>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './login.css';\n\ninterface LoginProps {\n    setConnected: any,\n    handleGoHomeIfUserIsConnected: any\n}\n\ninterface LoginState {\n    email: string,\n    password: string\n}\n\nexport default class Login extends Component<LoginProps, LoginState> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: 'eve.holt@reqres.in',\n            password: 'cityslicka'\n        }\n    }\n    onChangeEmail(event) {\n        this.setState({\n            email: event.target.value\n        });\n    }\n    onChangePassword(event) {\n        this.setState({\n            password: event.target.value\n        });\n    }\n    async login(event) {\n        const loginResponse = this.fetchLogin();\n        const responseJson = (await loginResponse).json();\n\n        if ((await loginResponse).status !== 200) {\n            return;\n        }\n\n        localStorage.setItem('auth_token', (await responseJson).token);\n        localStorage.setItem('email', this.state.email);\n\n        this.props.setConnected(true);\n\n    }\n    fetchLogin() {\n        return fetch('https://reqres.in/api/login', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            })\n        });\n    }\n    onSubmitForm(event) {\n        this.login(event);\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                {this.props.handleGoHomeIfUserIsConnected}\n                <div className=\"row\">\n                  <form id=\"formLogin\" onSubmit={this.onSubmitForm.bind(this)}>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Email\" defaultValue={this.state.email} onChange={this.onChangeEmail.bind(this)}/>\n                    <br/>\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Mot de passe\" defaultValue={this.state.password} onChange={this.onChangePassword.bind(this)}/>\n                    <br/>\n                    <button type=\"submit\" className=\"form-control\">login</button>\n                  </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\n\ninterface LogoutProps {\n    setConnected: any\n}\n\ninterface LogoutState {\n}\n\nexport default class Logout extends Component<LogoutProps, LogoutState> {\n    componentDidMount() {\n        localStorage.clear();\n        this.props.setConnected(false);\n    }\n    render() {\n        return <Redirect to=\"/\"/>\n    }\n}\n","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './purchaseBlock.css';\n\ninterface PurchaseBlockProps {\n    departureStation: string,\n    arrivalStation: string,\n}\n\ninterface PurchaseBlockStates {\n    priceTicket: number,\n    isBought: boolean\n}\n\nexport default class PurchaseBlock extends Component<PurchaseBlockProps, PurchaseBlockStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            priceTicket: 20,\n            isBought: false\n        };\n    }\n    getListStationsPurchased() {\n        const stations = localStorage.getItem('stations');\n\n        return stations ? JSON.parse(stations) : [];\n    }\n    saveStationBought() {\n        const stations = this.getListStationsPurchased();\n\n        let newStation = [this.props.arrivalStation, this.props.departureStation, this.getPriceReduction()];\n\n        stations.push(newStation);\n\n        localStorage.setItem('stations', JSON.stringify(stations));\n    }\n    onClickBuyingButton(event) {\n        this.saveStationBought();\n        this.setState({isBought: true});\n        event.preventDefault();\n    }\n    getPriceReduction() {\n        const promoCode = localStorage.getItem('promoCode');\n\n        return promoCode ? this.state.priceTicket / 2 : this.state.priceTicket;\n    }\n    getDisplayPrice() {\n        return (\n            <div>\n                <p style={{ textDecoration: this.getPriceReduction() !== this.state.priceTicket ? 'line-through' : ''}}>{this.state.priceTicket}€</p>\n                <p style={{ display: this.getPriceReduction() !== this.state.priceTicket ? 'block' : 'none' }}>Prix après réduction : {this.getPriceReduction()}€</p>\n            </div>\n        );\n    }\n    ticketIsBought() {\n        return this.state.isBought ? <Redirect to=\"/profile\"/> : <div/>;\n    }\n    render() {\n        return (\n            <div className=\"row schedule\">\n                {this.ticketIsBought()}\n                <div className=\"col-lg-3\">\n                    <p>{this.props.departureStation}</p>\n                    <hr/>\n                    <p>{this.props.arrivalStation}</p>\n                </div>\n                <div className=\"col-lg-3\">\n                    {this.getDisplayPrice()}\n                </div>\n                <form onSubmit={this.onClickBuyingButton.bind(this)} className=\"col-lg-6\">\n                    <input type=\"submit\" value=\"Acheter\"\n                           className=\"form-control\"/>\n                </form>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PurchaseBlock from \"./purchaseBlock\";\nimport './purchase.css';\n\ninterface PurchaseProps {\n    departureStation: string,\n    arrivalStation: string\n}\n\ninterface PurchaseStates {\n    stationList: any\n}\n\nexport default class Purchase extends Component<PurchaseProps, PurchaseStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stationList: []\n        }\n    }\n    computeStation() {\n        const stationList: string[] = [];\n\n        for (let i = 0; i < 10; i++) {\n            stationList.push('9h00');\n        }\n\n        this.setState({\n            stationList: stationList\n        });\n    }\n    componentDidMount() {\n        this.computeStation();\n    }\n    render() {\n        return (\n            <div id=\"purchaseBlock\" className=\"col-lg-12\">\n                {this.state.stationList.map((item, key) =>\n                    <PurchaseBlock key={key} departureStation={this.props.departureStation} arrivalStation={this.props.arrivalStation}/>\n                )}\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './station.css';\nimport Purchase from \"../Purchase/purchase\";\n\ninterface StationProps {\n}\n\ninterface StationStates {\n    departureStation: string,\n    arrivalStation: string,\n    departureStationSave: string,\n    arrivalStationSave: string,\n    departureListStations: any,\n    arrivalListStations: any,\n    displayDepartureList: boolean,\n    displayArrivalList: boolean,\n    searchEnabled: boolean\n}\n\nexport default class Station extends Component<StationProps, StationStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            departureStation: '',\n            arrivalStation: '',\n            departureStationSave: '',\n            arrivalStationSave: '',\n            departureListStations: [],\n            arrivalListStations: [],\n            displayDepartureList: false,\n            displayArrivalList: false,\n            searchEnabled: false\n        }\n    }\n    async displayDepartureListStations() {\n        if (this.state.departureStation === '') {\n            this.setState({\n                departureListStations: []\n            });\n            return;\n        }\n        const SNCFRailwayReferentialResponse = this.fetchSNCF(this.state.departureStation);\n        const responseJson = (await SNCFRailwayReferentialResponse).json();\n\n        const railwayStations = (await responseJson).records.map(value => {\n            return value.fields.pltf_commune_libellemin;\n        });\n\n        this.setState({\n            departureListStations: [...new Set(await railwayStations)]\n        });\n    }\n    async displayArrivalListStations() {\n        if (this.state.arrivalStation === '') {\n            this.setState({\n                arrivalListStations: []\n            });\n            return;\n        }\n        const SNCFRailwayReferentialResponse = this.fetchSNCF(this.state.arrivalStation);\n        const responseJson = (await SNCFRailwayReferentialResponse).json();\n\n        const railwayStations = (await responseJson).records.map(value => {\n            return value.fields.pltf_commune_libellemin;\n        });\n\n        this.setState({\n            arrivalListStations: [...new Set(await railwayStations)]\n        });\n    }\n    fetchSNCF(station) {\n        return fetch('https://ressources.data.sncf.com/api/records/1.0/search/?dataset=referentiel-gares-voyageurs&q=' + station);\n    }\n    onChangeDepartureStation(event) {\n        this.setState({\n            departureStation: event.target.value,\n            displayDepartureList: true\n        });\n    }\n    onChangeArrivalStation(event) {\n        this.setState({\n            arrivalStation: event.target.value,\n            displayArrivalList: true,\n        });\n    }\n    handleCheckDeparture(event) {\n        this.setState({\n            departureStation: event.target.textContent,\n            displayDepartureList: false,\n        });\n    }\n    handleCheckArrival(event) {\n        this.setState({\n            arrivalStation: event.target.textContent,\n            displayArrivalList: false,\n        });\n    }\n    onSubmitForm(event) {\n        this.setState({\n            departureStationSave: this.state.departureStation,\n            arrivalStationSave: this.state.arrivalStation,\n            searchEnabled: true\n        });\n        event.preventDefault();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.departureStation !== prevState.departureStation) {\n            this.displayDepartureListStations();\n            this.setState({\n                displayArrivalList: false,\n            });\n        }\n        if (this.state.arrivalStation !== prevState.arrivalStation) {\n            this.displayArrivalListStations();\n            this.setState({\n                displayDepartureList: false,\n            });\n        }\n    }\n    render() {\n        return (\n            <div id=\"formStation\" className=\"container\">\n                <div className=\"row\">\n                    <form className=\"col-lg-6\" onSubmit={this.onSubmitForm.bind(this)}>\n                        <p>Quel est votre trajet ?</p>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Saisir votre gare de départ...\" value={this.state.departureStation} onChange={this.onChangeDepartureStation.bind(this)}/>\n                        <br/>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Saisir votre gare de d'arrivée...\"  value={this.state.arrivalStation} onChange={this.onChangeArrivalStation.bind(this)}/>\n                        <br/>\n                        <input type=\"date\" className=\"form-control\"/>\n                        <br/>\n                        <input type=\"submit\" className=\"form-control\"/>\n                    </form>\n                    <div className=\"col-lg-6\">\n                        <ul className=\"list-group\" style={{ display: this.state.displayDepartureList ? 'block' : 'none' }}>\n                            {this.state.departureListStations.map((d, idx) => {\n                                return (<li onClick={this.handleCheckDeparture.bind(this)} className=\"list-group-item\" key={idx}>{d}</li>)\n                            })}\n                        </ul>\n                        <ul className=\"list-group\" style={{ display: this.state.displayArrivalList ? 'block' : 'none' }}>\n                            {this.state.arrivalListStations.map((d, idx) => {\n                                return (<li onClick={this.handleCheckArrival.bind(this)} className=\"list-group-item\" key={idx}>{d}</li>)\n                            })}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ display: this.state.searchEnabled ? 'block' : 'none' }}>\n                    <Purchase departureStation={this.state.departureStation} arrivalStation={this.state.arrivalStation}/>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport md5 from 'md5';\nimport emailPropType from 'email-prop-type';\nimport { Redirect } from 'react-router-dom';\n\ninterface UserPanelProps {\n    firstName: string,\n    lastName: string,\n    email: string\n}\n\ninterface UserPanelStates {\n    promoCode: string,\n    isCompleted: boolean\n}\n\nexport default class UserPanel extends React.Component<UserPanelProps, UserPanelStates> {\n    static propTypes = {\n        email: emailPropType.isRequired,\n        firstName: PropTypes.string.isRequired,\n        lastName: PropTypes.string.isRequired,\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            promoCode: this.getPromoCode(),\n            isCompleted: false\n        };\n    }\n    getPromoCode() {\n        const promoCode = localStorage.getItem('promoCode');\n        return promoCode ? promoCode : '';\n    }\n    onChangeInput(event) {\n        this.setState({\n            promoCode: event.target.value\n        });\n    }\n    onClickButtonPromoCode(event) {\n        localStorage.setItem('promoCode', this.state.promoCode);\n        this.setState({isCompleted: true});\n        event.preventDefault();\n    }\n    codePromoIsCompleted() {\n        return this.state.isCompleted ? <Redirect to=\"/purchase\"/> : <div/>;\n    }\n    getCorrectInputPromoCode() {\n        if (localStorage.getItem('stations') === null) {\n            return (\n                <div>\n                    <p>Code de réduction</p>\n                    <input type=\"text\" className=\"form-control\" defaultValue={this.state.promoCode}\n                           onChange={this.onChangeInput.bind(this)}/>\n                    <br/>\n                    <input type=\"submit\" className=\"form-control\" value=\"Appliquer\"/>\n                </div>\n            );\n        }\n        return (\n            <div>\n                <p>Code de réduction</p>\n                <input disabled type=\"text\" className=\"form-control\" defaultValue={this.state.promoCode}\n                       onChange={this.onChangeInput.bind(this)}/>\n                <br/>\n                <input disabled type=\"submit\" className=\"form-control\" value=\"Appliquer\"/>\n            </div>\n        );\n    }\n    render() {\n        return (\n            <div className=\"card\">\n                {this.codePromoIsCompleted()}\n                <img src={'https://www.gravatar.com/avatar/' + md5(this.props.email) + '?s=286'}\n                     className=\"card-img-top\" alt=\"hello\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{this.props.firstName + ' ' + this.props.lastName}</h5>\n                    <p className=\"card-title\">{this.props.email}</p>\n                    <hr/>\n                    <form onSubmit={this.onClickButtonPromoCode.bind(this)}>\n                        {this.getCorrectInputPromoCode()}\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\n\ninterface TicketProps {\n}\n\ninterface TicketStates {\n    tickets: any\n}\n\nexport default class Ticket extends Component<TicketProps, TicketStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tickets: this.getMyTickets()\n        };\n    }\n\n    getMyTickets() {\n        const tickets = localStorage.getItem('stations');\n\n        return tickets ? JSON.parse(tickets) : [];\n    }\n\n    displayTicket(ticket, idx) {\n        return (\n            <div key={idx}>\n                <p>{ticket[0]} -> {ticket[1]}: {ticket[2]}€</p>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Mes tickets</h2>\n                {this.state.tickets.map((ticket, idx) => {\n                    return (this.displayTicket(ticket, idx))\n                })}\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport './profile.css';\nimport UserPanel from \"../UserPanel/UserPanel\";\nimport Ticket from \"../Ticket/ticket\";\n\ninterface ProfileProps {\n}\n\ninterface ProfileStates {\n}\n\nexport default class Profile extends Component<ProfileProps, ProfileStates> {\n    getEmail() {\n        const email = localStorage.getItem('email');\n        return email ? email : \"\";\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row profile-block\">\n                    <div className=\"col-lg-4\">\n                        <UserPanel firstName=\"Maxime\" lastName=\"JOSIEN\" email={this.getEmail()}/>\n                    </div>\n                    <div className=\"col-lg-6 border-tickets\">\n                        <Ticket/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport Navbar from \"../Navbar/Navbar\";\nimport Login from \"../User/login\";\nimport Logout from \"../User/logout\";\nimport Station from \"../Station/station\";\nimport Profile from \"../Profile/profile\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {RouteComponentProps} from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\ninterface FNCSProps {\n}\n\ninterface FNCSStates {\n    connected: boolean;\n}\n\nexport default class FNCS extends Component<FNCSProps & RouteComponentProps, FNCSStates> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: !!localStorage.getItem('auth_token')\n        };\n    }\n    setConnected = (connected) => {\n        this.setState({\n            connected: connected\n        });\n    }\n    goHomeIfUserIsConnected() {\n        if (this.state.connected) {\n            return <Redirect to=\"/purchase\"/>\n        }\n       return <div/>\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Navbar connected={this.state.connected}/>\n                    <Route path=\"/login\" render={() => <Login setConnected={this.setConnected} handleGoHomeIfUserIsConnected={this.goHomeIfUserIsConnected()}/>}/>\n                    <Route path=\"/logout\" render={() => <Logout setConnected={this.setConnected}/>}/>\n                    <Route path=\"/purchase\" component={Station}/>\n                    <Route path=\"/profile\" component={Profile}/>\n                </Router>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FNCS from \"./FNCS/fncs\";\n\nexport default function App() {\n    return (\n        <div className=\"App\">\n            <FNCS/>\n        </div>\n    );\n}\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}